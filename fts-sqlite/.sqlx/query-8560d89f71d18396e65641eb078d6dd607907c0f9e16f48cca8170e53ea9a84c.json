{
  "db_name": "SQLite",
  "query": "-- A portfolio is considered active if and only if\n-- * it has at least one associated demand, AND\n-- * it has at least one associated product.\nwith\ndemand_by_id as (\n    select\n        portfolio_id,\n        valid_until as expires,\n        jsonb_group_object(demand_id, weight) as dgroup\n    from\n        portfolio_demand\n    where\n        valid_from <= $1\n    and\n        ($1 < valid_until or valid_until is null)\n    group by\n        portfolio_id\n),\n\nbasis_by_id as (\n    select\n        portfolio_id,\n        valid_until as expires,\n        jsonb_group_object(product_id, weight) as pgroup\n    from\n        basis_view\n    where\n        valid_from <= $1\n    and\n        ($1 < valid_until or valid_until is null)\n    group by\n        portfolio_id\n)\n\nselect\n    portfolio_id as \"id!: PortfolioId\",\n    min(\n        coalesce(demand_by_id.expires, basis_by_id.expires),\n        coalesce(basis_by_id.expires, demand_by_id.expires)\n    ) as \"expires?: DateTime\",\n    json(dgroup) as \"demand!: sqlx::types::Json<Weights<DemandId>>\",\n    json(pgroup) as \"basis!: sqlx::types::Json<Basis<ProductId>>\"\nfrom\n    demand_by_id\njoin\n    basis_by_id\nusing\n    (portfolio_id)\n",
  "describe": {
    "columns": [
      {
        "name": "id!: PortfolioId",
        "ordinal": 0,
        "type_info": "Text"
      },
      {
        "name": "expires?: DateTime",
        "ordinal": 1,
        "type_info": "Null"
      },
      {
        "name": "demand!: sqlx::types::Json<Weights<DemandId>>",
        "ordinal": 2,
        "type_info": "Null"
      },
      {
        "name": "basis!: sqlx::types::Json<Basis<ProductId>>",
        "ordinal": 3,
        "type_info": "Null"
      }
    ],
    "parameters": {
      "Right": 1
    },
    "nullable": [
      false,
      null,
      null,
      null
    ]
  },
  "hash": "8560d89f71d18396e65641eb078d6dd607907c0f9e16f48cca8170e53ea9a84c"
}
