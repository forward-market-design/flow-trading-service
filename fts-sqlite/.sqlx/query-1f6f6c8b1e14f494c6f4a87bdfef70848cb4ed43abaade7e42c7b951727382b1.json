{
  "db_name": "SQLite",
  "query": "-- A portfolio is considered active if and only if\n-- * it has at least one associated demand, OR\n-- * it has at least one associated product.\nwith\ndemand_groups_by_id as (\n    select\n        portfolio_id,\n        max(valid_from) as valid_from,\n        min(valid_until) as valid_until,\n        jsonb_group_object(demand_id, weight) as dgroup\n    from\n        demand_group\n    where\n        demand_group.valid_from <= $2\n    and\n        ($2 < demand_group.valid_until or demand_group.valid_until is null)\n    group by\n        portfolio_id\n),\n\nproduct_groups_by_id as (\n    select\n        portfolio_id,\n        max(valid_from) as valid_from,\n        min(valid_until) as valid_until,\n        jsonb_group_object(product_id, weight) as pgroup\n    from\n        product_group\n    where\n        product_group.valid_from <= $2\n    and\n        ($2 < product_group.valid_until or product_group.valid_until is null)\n    group by\n        portfolio_id\n)\n\nselect\n    portfolio_id as \"id!: PortfolioId\",\n    max(\n        coalesce(demand_groups_by_id.valid_from, product_groups_by_id.valid_from),\n        coalesce(product_groups_by_id.valid_from, demand_groups_by_id.valid_from)\n     ) as \"valid_from!: DateTime\",\n    min(\n        coalesce(demand_groups_by_id.valid_until, product_groups_by_id.valid_until),\n        coalesce(product_groups_by_id.valid_until, demand_groups_by_id.valid_until)\n    ) as \"valid_until?: DateTime\",\n    bidder_id as \"bidder_id!: BidderId\",\n    json(app_data) as \"app_data!: sqlx::types::Json<PortfolioData>\",\n    json(dgroup) as \"demand_group?: sqlx::types::Json<DemandGroup<DemandId>>\",\n    json(pgroup) as \"product_group?: sqlx::types::Json<ProductGroup<ProductId>>\"\nfrom\n    demand_groups_by_id\nfull join\n    product_groups_by_id\nusing\n    (portfolio_id)\njoin\n    portfolio\non\n    portfolio_id = portfolio.id\njoin\n    json_each($1) as bidder_ids\non\n    portfolio.bidder_id = bidder_ids.atom\n",
  "describe": {
    "columns": [
      {
        "name": "id!: PortfolioId",
        "ordinal": 0,
        "type_info": "Text"
      },
      {
        "name": "valid_from!: DateTime",
        "ordinal": 1,
        "type_info": "Null"
      },
      {
        "name": "valid_until?: DateTime",
        "ordinal": 2,
        "type_info": "Null"
      },
      {
        "name": "bidder_id!: BidderId",
        "ordinal": 3,
        "type_info": "Text"
      },
      {
        "name": "app_data!: sqlx::types::Json<PortfolioData>",
        "ordinal": 4,
        "type_info": "Null"
      },
      {
        "name": "demand_group?: sqlx::types::Json<DemandGroup<DemandId>>",
        "ordinal": 5,
        "type_info": "Null"
      },
      {
        "name": "product_group?: sqlx::types::Json<ProductGroup<ProductId>>",
        "ordinal": 6,
        "type_info": "Null"
      }
    ],
    "parameters": {
      "Right": 2
    },
    "nullable": [
      true,
      null,
      null,
      false,
      null,
      null,
      null
    ]
  },
  "hash": "1f6f6c8b1e14f494c6f4a87bdfef70848cb4ed43abaade7e42c7b951727382b1"
}
