{
  "db_name": "SQLite",
  "query": "-- fn(demand_id: DemandId, as_of: DateTime) -> DemandRow\nwith\napp_data_cte as (\n    select\n        id as portfolio_id,\n        bidder_id,\n        app_data as value,\n        as_of\n    from\n        portfolio\n    where\n        id = $1\n),\n\ndemand_group_cte as (\n    select\n        portfolio_id,\n        max(valid_from) as valid_from,\n        min(valid_until) as valid_until,\n        jsonb_group_object(demand_id, weight) as value\n    from\n        demand_group\n    where\n        portfolio_id = $1\n        and\n        valid_from <= $2\n        and\n        ($2 < valid_until or valid_until is null)\n    group by\n        portfolio_id\n),\n\nbasis_cte as (\n    select\n        portfolio_id,\n        max(valid_from) as valid_from,\n        min(valid_until) as valid_until,\n        jsonb_group_object(product_id, weight) as value\n    from\n        basis_view\n    where\n        portfolio_id = $1\n        and\n        valid_from <= $2\n        and\n        ($2 < valid_until or valid_until is null)\n    group by\n        portfolio_id\n)\n\nselect\n    portfolio_id as \"id!: PortfolioId\",\n    max(\n        coalesce(demand_group_cte.valid_from, basis_cte.valid_from, app_data_cte.as_of),\n        coalesce(basis_cte.valid_from, demand_group_cte.valid_from, app_data_cte.as_of)\n    ) as \"valid_from!: DateTime\",\n    min(\n        coalesce(demand_group_cte.valid_until, basis_cte.valid_until),\n        coalesce(basis_cte.valid_until, demand_group_cte.valid_until)\n    ) as \"valid_until?: DateTime\",\n    app_data_cte.bidder_id as \"bidder_id!: BidderId\",\n    json(app_data_cte.value) as \"app_data!: sqlx::types::Json<PortfolioData>\",\n    json(demand_group_cte.value) as \"demand_group?: sqlx::types::Json<DemandGroup<DemandId>>\",\n    json(basis_cte.value) as \"basis?: sqlx::types::Json<Basis<ProductId>>\"\nfrom\n    app_data_cte\nleft join\n    demand_group_cte\n    using\n        (portfolio_id)\nleft join\n    basis_cte\n    using\n        (portfolio_id);\n",
  "describe": {
    "columns": [
      {
        "name": "id!: PortfolioId",
        "ordinal": 0,
        "type_info": "Text"
      },
      {
        "name": "valid_from!: DateTime",
        "ordinal": 1,
        "type_info": "Null"
      },
      {
        "name": "valid_until?: DateTime",
        "ordinal": 2,
        "type_info": "Null"
      },
      {
        "name": "bidder_id!: BidderId",
        "ordinal": 3,
        "type_info": "Text"
      },
      {
        "name": "app_data!: sqlx::types::Json<PortfolioData>",
        "ordinal": 4,
        "type_info": "Null"
      },
      {
        "name": "demand_group?: sqlx::types::Json<DemandGroup<DemandId>>",
        "ordinal": 5,
        "type_info": "Null"
      },
      {
        "name": "basis?: sqlx::types::Json<Basis<ProductId>>",
        "ordinal": 6,
        "type_info": "Null"
      }
    ],
    "parameters": {
      "Right": 2
    },
    "nullable": [
      false,
      null,
      null,
      false,
      null,
      null,
      null
    ]
  },
  "hash": "c531f679eab60e6cbd82b1385b5c06ecbfc1479c51606e3f3baad7e0dfe04855"
}
