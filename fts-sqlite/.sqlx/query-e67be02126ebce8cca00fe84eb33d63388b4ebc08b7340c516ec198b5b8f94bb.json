{
  "db_name": "SQLite",
  "query": "-- A portfolio is considered active if and only if\n-- * it has at least one associated demand, AND\n-- * it has at least one associated product.\nwith\ndemand_by_id as (\n    select\n        portfolio_id,\n        max(valid_from) as valid_from,\n        min(valid_until) as valid_until,\n        jsonb_group_object(demand_id, weight) as dgroup\n    from\n        portfolio_demand\n    where\n        valid_from <= $1\n    and\n        ($1 < valid_until or valid_until is null)\n    group by\n        portfolio_id\n),\n\nbasis_by_id as (\n    select\n        portfolio_id,\n        max(valid_from) as valid_from,\n        min(valid_until) as valid_until,\n        jsonb_group_object(product_id, weight) as pgroup\n    from\n        basis_view\n    where\n        valid_from <= $1\n    and\n        ($1 < valid_until or valid_until is null)\n    group by\n        portfolio_id\n)\n\nselect\n    portfolio_id as \"id!: PortfolioId\",\n    max(demand_by_id.valid_from, basis_by_id.valid_from) as \"valid_from!: DateTime\",\n    min(\n        coalesce(demand_by_id.valid_until, basis_by_id.valid_until),\n        coalesce(basis_by_id.valid_until, demand_by_id.valid_until)\n    ) as \"valid_until?: DateTime\",\n    bidder_id as \"bidder_id!: BidderId\",\n    json(\"null\") as \"app_data!: sqlx::types::Json<()>\",\n    json(dgroup) as \"demand?: sqlx::types::Json<Weights<DemandId>>\",\n    json(pgroup) as \"basis?: sqlx::types::Json<Basis<ProductId>>\"\nfrom\n    demand_by_id\njoin\n    basis_by_id\nusing\n    (portfolio_id)\njoin\n    portfolio\non\n    portfolio_id = portfolio.id\n",
  "describe": {
    "columns": [
      {
        "name": "id!: PortfolioId",
        "ordinal": 0,
        "type_info": "Text"
      },
      {
        "name": "valid_from!: DateTime",
        "ordinal": 1,
        "type_info": "Null"
      },
      {
        "name": "valid_until?: DateTime",
        "ordinal": 2,
        "type_info": "Null"
      },
      {
        "name": "bidder_id!: BidderId",
        "ordinal": 3,
        "type_info": "Text"
      },
      {
        "name": "app_data!: sqlx::types::Json<()>",
        "ordinal": 4,
        "type_info": "Null"
      },
      {
        "name": "demand?: sqlx::types::Json<Weights<DemandId>>",
        "ordinal": 5,
        "type_info": "Null"
      },
      {
        "name": "basis?: sqlx::types::Json<Basis<ProductId>>",
        "ordinal": 6,
        "type_info": "Null"
      }
    ],
    "parameters": {
      "Right": 1
    },
    "nullable": [
      false,
      null,
      null,
      false,
      null,
      null,
      null
    ]
  },
  "hash": "e67be02126ebce8cca00fe84eb33d63388b4ebc08b7340c516ec198b5b8f94bb"
}
